# This is a basic workflow to help you get started with Actions

name: Webapp Test

# Controls when the action will run.
on:
  # Triggers the workflow on pull request events when there are changes made to the webapp directory
  pull_request:
    paths:
      - "webapp/**"

  # Triggers the workflow on push events to main when there are change made to the webapp directory
  push:
    branches:
      - "main"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job
  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout the repository
        uses: actions/checkout@v2

      # Setup Node
      - name: Setup Node.js 14
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      # Install node modules
      - name: Install node modules
        run: cd webapp; npm install

      # Configure Firebase environment variables
      - name: Configure Firebase environment variables
        run: |
          echo REACT_APP_FIREBASE_APIKEY=${{ secrets.FIREBASE_APIKEY }} >> ./webapp/.env
          echo REACT_APP_FIREBASE_AUTHDOMAIN=${{ secrets.FIREBASE_AUTHDOMAIN }} >> ./webapp/.env
          echo REACT_APP_FIREBASE_PROJECTID=${{ secrets.FIREBASE_PROJECTID }} >> ./webapp/.env
          echo REACT_APP_FIREBASE_STORAGEBUCKET=${{ secrets.FIREBASE_STORAGEBUCKET }} >> ./webapp/.env
          echo REACT_APP_FIREBASE_MESSAGINGSENDERID=${{ secrets.FIREBASE_MESSAGINGSENDERID }} >> ./webapp/.env
          echo REACT_APP_FIREBASE_APPID=${{ secrets.FIREBASE_APPID }} >> ./webapp/.env
          echo REACT_APP_FIREBASE_MEASUREMENTID=${{ secrets.FIREBASE_MEASUREMENTID }} >> ./webapp/.env

      # Test the web app
      - name: Test the web app
        run: cd webapp; npm run coverage

      # Upload Code Coverage Report
      - name: Upload Code Coverage Report
        uses: codecov/codecov-action@v1
        with:
          directory: ./webapp/coverage
          flags: unittests, webapp
